// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

// structure for our data
// https://www.prisma.io/docs/orm/prisma-schema/data-model/models
// tour is the name on Prisma
model Tour {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  city String
  country String
  title String
  description String @db.Text
  image String? @db.Text
  stops Json
  @@unique([city, country])
}

//@db.Text: This attribute is used to specify the type of the column in the 
//underlying database. When you use @db.Text, you're telling Prisma that the 
//particular field should be stored as a text column in the database. 
//Text columns can store large amounts of string data, typically used for 
//long-form text that exceeds the length limits of standard string columns. 
//This is often used for descriptions, comments, JSON-formatted strings, etc.

//@@unique: This attribute is used at the model level to enforce the uniqueness 
//of a specific combination of fields within the database. In this case, 
//@@unique([city, country]) ensures that no two rows in the table have the 
//same combination of city and country. This means you can have multiple tours 
//in the same city or country, but not multiple tours with the same city and 
//country combination. It essentially acts as a composite unique constraint 
//on the two fields.

model Token {
  clerkId String @id
  tokens Int @default (1000)
}

// everytime this page gets updated, need to restart the server by entering:
// npx prisma db push       in the terminal
  